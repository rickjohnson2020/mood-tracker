{"ast":null,"code":"var _jsxFileName = \"/Users/yanoriku/Documents/personal_project/mood_tracker/frontend/src/Top.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getMood } from './api/getMood';\nimport { MoodContent } from './components/MoodContent';\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport './Top.css'; // import { CategoryList } from '../components/CategoryList'\n// added\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Group A',\n  value: (MoodContent.mood === 'rad').length\n}, {\n  name: 'Group B',\n  value: (MoodContent.mood === 'good').length\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}];\nconst COLORS = ['#FFCC33', '#98FB98', '#DDA0DD', '#D3D3D3'];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport const Top = () => {\n  _s();\n\n  const initialState = {\n    id: '',\n    date: '',\n    mood: ''\n  };\n  const [mood, setMood] = useState(initialState);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getMood().then(d => {\n      setMood(d);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, []); // added\n\n  let radCount,\n      goodCount,\n      mehCount,\n      badCount = 0;\n  {\n    mood.mood === 'rad' ? radCount += 1 : mood.mood === 'good' ? goodCount += 1 : mood.mood === 'meh' ? mehCount += 1 : badCount += 1;\n  } // added\n\n  const data = [{\n    name: 'Group A',\n    value: radCount\n  }, {\n    name: 'Group B',\n    value: goodCount\n  }, {\n    name: 'Group C',\n    value: 300\n  }, {\n    name: 'Group D',\n    value: 200\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Top\",\n        children: mood.map(d => /*#__PURE__*/_jsxDEV(MoodContent, { ...d\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-chart-parent\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          className: \"pie-chart-child\",\n          width: 400,\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: data,\n            cx: 200,\n            cy: 200,\n            labelLine: false,\n            label: renderCustomizedLabel,\n            outerRadius: 150,\n            fill: \"#8884d8\",\n            dataKey: \"value\",\n            children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Top, \"bF1EmmDQnEhm6O/mkf05GAZ6U5w=\");\n\n_c = Top;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top\");","map":{"version":3,"sources":["/Users/yanoriku/Documents/personal_project/mood_tracker/frontend/src/Top.js"],"names":["React","useState","useEffect","getMood","MoodContent","PieChart","Pie","Cell","data","name","value","mood","length","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","Top","initialState","id","date","setMood","loading","setLoading","then","d","catch","err","console","log","radCount","goodCount","mehCount","badCount","map","entry"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getMood } from './api/getMood'\nimport { MoodContent } from './components/MoodContent'\nimport { PieChart, Pie, Cell } from \"recharts\";\n\nimport './Top.css'\n// import { CategoryList } from '../components/CategoryList'\n\n\n// added\nconst data = [\n  { name: 'Group A', value: ((MoodContent.mood==='rad').length) },\n  { name: 'Group B', value: ((MoodContent.mood==='good').length) },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nconst COLORS = ['#FFCC33', '#98FB98', '#DDA0DD', '#D3D3D3'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\n\n\n\n\nexport const Top = () => {\n  const initialState = {\n    id: '',\n    date: '',\n    mood: '',\n  }\n\n  const[mood, setMood] = useState(initialState);\n  const[loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    getMood()\n    .then(d => {\n      setMood(d)\n      setLoading(false)\n    })\n    .catch(err => console.log(err));\n  },[])\n\n  // added\n  let radCount, goodCount, mehCount, badCount = 0;\n\n  { mood.mood === 'rad' ? radCount += 1\n  : mood.mood === 'good' ? goodCount += 1\n  : mood.mood === 'meh' ? mehCount += 1\n  : badCount += 1\n  }\n  // added\n  const data = [\n    { name: 'Group A', value: (radCount) },\n    { name: 'Group B', value: (goodCount) },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 },\n  ];\n\n\n\n  return(\n    <div>\n      {\n        loading ?\n        <h1>loading...</h1>\n        :\n        <div>\n\n          <div className='Top'>\n          {mood.map( d => <MoodContent {...d}  /> )}\n          </div>\n\n          <div className='pie-chart-parent'>\n\n\n            <PieChart className='pie-chart-child' width={400} height={400}>\n              <Pie\n                data={data}\n                cx={200}\n                cy={200}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={150}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n            </PieChart>\n          </div>\n\n        </div>\n\n      }\n    </div>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}